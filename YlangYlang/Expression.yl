module Main.Thing exposing (thisThing,Parser(..))

import Main.Other as MO
import Main.OtherThing as MOT exposing (all,sorts,ofThings)


whatever _ =
  case thing == okay   
    of
   Test   a b ((c,f) as bla)  -> 
     let
         xsdfasdfasdf = (3.ert)
         _ = Debug.log "" ()
         dfg=3-1
    in
      ( if a then b d cl (3,4,67.9) sdf.da.d + f a (b sd f) k 8 - 3 else 
                                                c,()  ) 

   _ :: tail -> sub.field param1 alsoParam

cmds df = 613
